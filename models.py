from sqlalchemy import Integer, Float,Date,Time,String,Column, DateTime,DATE,TIME,BigInteger,ForeignKey
from sqlalchemy.orm import relationship

from database import Base
class Educational(Base):
    __tablename__='education_details'
    sno=Column(Integer, primary_key=True, autoincrement=True)
    empid=Column(String(10))
    type =Column(String(50))
    course =Column(String(50))
    passout =Column(Integer)
    percentage =Column(Float)
    reg_number =Column(String(50))
    created_by=Column(String(50))
    created_on=Column(DateTime)

    # branch_id = Column(Integer, ForeignKey("employee_details.sno"))
    # educat = relationship("Employee_details", back_populates="owner")

class Employee_details(Base):
    __tablename__='employee_details'
    sno = Column(Integer,primary_key=True,autoincrement=True)
    empid = Column(String(10), index=True)
    password = Column(String(100))
    mobile_password = Column(String(50))
    employee_name = Column(String(100))
    title = Column(String(100))
    first_name = Column(String(100))
    middle_name = Column(String(100))
    last_name = Column(String(100))
    state = Column(String(100))
    city = Column(String(100))
    pincode = Column(String(100))
    branch = Column(String(30),index=True)
    branch_state = Column(String(100))
    designation = Column(String(100))
    grade = Column(String(100))
    cost_center = Column(String(100))
    doj = Column(Date, index=True)
    last_working_date = Column(Date)
    left_reason = Column(String(100))
    seperation_type = Column(String(30))
    reason_type = Column(String(30))
    rehire = Column(String(10))
    date_of_birth = Column(Date)
    reporting_to = Column(String(30))
    reporting_officer = Column(String(100))
    directory = Column(String(100))
    department = Column(String(100))
    sub_department = Column(String(100))
    quality_category = Column(String(100))
    department_eff_date = Column(Date)
    band_grade = Column(String(100))
    band_grade_eff_date = Column(Date)
    position = Column(String(30))
    employment_type = Column(String(100))
    employe_type_eff_date = Column(Date)
    off_emp_id = Column(String(100))
    off_mobile = Column(Integer)
    roles = Column(String(100))
    branch_access = Column(String(100))
    confirmation_status = Column(String(100))
    date_of_confirmation = Column(Date)
    confirmation_due_date = Column(Date)
    date_of_last_promotion = Column(Date)
    tenure = Column(Float)
    total_experience = Column(Float)
    Category = Column(String(100))
    FBP_value = Column(String(100))
    Gross = Column(BigInteger)
    ctc = Column(BigInteger)
    annual_variable_pay = Column(BigInteger)
    annual_ctc = Column(BigInteger)
    increment_date = Column(Date)
    tds_status = Column(String(100))
    payment_mode = Column(String(100))
    ac_number = Column(String(100))
    bank_name = Column(String(100))
    ifsc = Column(String(100))
    esi_status = Column(String(100))
    esi = Column(String(100))
    uan = Column(String(30))
    pan = Column(String(100))
    aadhar = Column(String(100))
    aadhar_ref = Column(String(100))
    pf_status = Column(String(100))
    pf = Column(String(100))
    passport = Column(String(100))
    driving = Column(String(100))
    retirement_date = Column(Date)
    status = Column(String(10), index=True)
    notice_period = Column(String(100))
    resignation_date = Column(Date)
    mode_of_separation = Column(String(100))
    assigned_shift = Column(String(100))
    weekoffday = Column(String(100))
    onduty = Column(String(100))
    default_shift_eff_date = Column(Date)
    gender = Column(String(100))
    father_name = Column(String(100))
    personal_mobile = Column(BigInteger)
    personal_email = Column(String(100))
    placeofbirth = Column(String(100))
    age = Column(Integer)
    nationality = Column(String(100))
    religion = Column(String(100))
    marital_status = Column(String(100))
    spouse_name = Column(String(100))
    noofchildren = Column(Integer)
    wedding_date = Column(Date)
    nom_name = Column(String(100))
    nom_rel = Column(String(100))
    nom_per = Column(String(100))
    nom_name2 = Column(String(100))
    nom_rel2 = Column(String(100))
    nom_per2 = Column(String(100))
    nom_name3 = Column(String(100))
    nom_rel3 = Column(String(100))
    nom_per3 = Column(String(100))
    present_address = Column(String(100))
    present_state = Column(String(100))
    permanent_address = Column(String(100))
    permanent_state = Column(String(100))
    blood_group = Column(String(100))
    emergency_contact_person = Column(String(100))
    emergency_landline = Column(String(100))
    emergency_mobile = Column(BigInteger)
    physically_handicapped = Column(String(100))
    nps_status = Column(String(15))
    pt_state = Column(String(100))
    countries = Column(String(100))
    casual_leave = Column(Integer)
    compen_off = Column(Integer)
    earn_leave = Column(Integer)
    on_duty = Column(Integer)
    optional_holiday = Column(Integer)
    sick_leave = Column(Integer)
    week_off = Column(Integer)
    created_byname = Column(String(100))
    created_byempid = Column(String(30))
    created_on = Column(Date)
    created_time = Column(Time)
    at_work_hrs = Column(Time)
    brand_calls = Column(String(225))
    pt_status = Column(String(100))
    emp_image = Column(String(100))
    appointment_letter = Column(String(100))
    app_uploaded_on = Column(DateTime)
    app_uploaded_by = Column(String(100))
    increment_letter = Column(String(100))
    incr_uploaded_on = Column(DateTime)
    incr_uploaded_by = Column(String(100))
    bgv_letter = Column(String(100))
    bgv_uploaded_on = Column(DateTime)
    bgv_uploaded_by = Column(String(100))
    international = Column(String(20))
    issue_tracker = Column(Integer)
    login_date = Column(Date)
    login_time = Column(Time)
    logout_date = Column(Date)
    logout_time = Column(Time)
    os_version = Column(String(100))
    model = Column(String(100))
    udid = Column(String(100))
    tokenid = Column(String(100))
    change_pass_ip = Column(String(100))
    change_pass_on = Column(DateTime)
    master_access = Column(Integer)
    recruitment = Column(Integer)
    mrf_access = Column(String(100))
    onboarding = Column(Integer)
    pms = Column(String(100))
    payroll_upload = Column(Integer)
    payroll_run = Column(Integer)
    payroll_branch = Column(Integer)
    payroll_paysheets = Column(Integer)
    leaveattendance = Column(Integer)
    otreport = Column(String(100))
    tdsreport = Column(Integer)
    essreport = Column(Integer)
    kyns_report = Column(Integer)
    exitinterview = Column(Integer)
    qrstatus = Column(Integer)
    task_manager = Column(Integer)
    license = Column(Integer)
    reports_access = Column(Integer)
    refname1 = Column(String(100))
    refmail1 = Column(String(100))
    refnum1 = Column(Integer)
    refdep1 = Column(String(100))
    refdes1 = Column(String(100))
    refname2 = Column(Integer)
    refmail2 = Column(String(100))
    refnum2 = Column(Integer)
    refdep2 = Column(String(100))
    refdes2 = Column(String(100))
    refname3 = Column(String(100))
    refmail3 = Column(String(100))
    refnum3 = Column(Integer)
    refdep3 = Column(String(100))
    refdes3 = Column(String(100))
    refname4 = Column(String(100))
    refmail4 = Column(String(100))
    refnum4 = Column(Integer)
    refdep4 = Column(String(100))
    refdes4 = Column(String(100))
    refname5 = Column(String(100))
    refmail5 = Column(String(100))
    refnum5 = Column(BigInteger)
    refdep5 = Column(String(100))
    refdes5 = Column(String(100))
    accesskey = Column(String(50), index=True)
    androidpermissions = Column(String(100), index=True)
    androidsubmenu = Column(String(100), index=True)
    androiddashboard = Column(String(100), index=True)
    IS_ADMIN = Column(String(100))
    code = Column(String(100))
    risk_allowance = Column(String(100))
    risk_amount = Column(String(100))

    # empdetail_ID = Column(Integer, ForeignKey("education_details.sno"))
    # owner = relationship("Educational", back_populates="educat")
class Eps(Base):
    __tablename__='eps'
    sno = Column(Integer,primary_key = True,autoincrement = True)
    empid = Column(String(10))
    name = Column(String(100))
    department = Column(String(100))
    designation = Column(String(50))
    doj = Column(Date)
    acc_no = Column(String(100))
    pt_days = Column(Integer)
    lop_days = Column(Integer)
    leaves = Column(Integer)
    paid_days = Column(Integer)
    sp_basic = Column(String(100))
    sp_hra = Column(String(100))
    sp_bonus = Column(String(100))
    sp_Medi = Column(String(100))
    sp_Hosp = Column(String(100))
    sp_Educa = Column(String(100))
    sp_canteen = Column(String(100))
    sp_wash = Column(String(100))
    sp_atten = Column(String(100))
    sp_risk = Column(String(100))
    sp_shift = Column(String(100))
    sp_gross = Column(String(10))
    sp_variable = Column(String(100))
    sp_pf = Column(String(100))
    sp_esi = Column(String(100))
    child_allow = Column(String(100))
    special_allow = Column(String(100))
    internet_expenses = Column(String(100))
    periodicals = Column(String(100))
    car_reimbursement = Column(String(100))
    driver_salary = Column(String(100))
    Gifts_From_Non_Relatives = Column(String(100))
    Gifts_From_Relatives = Column(String(100))
    uniform_dress_allowance = Column(String(100))
    Professional_Development_Allowance = Column(String(100))
    telephone_reimbursement = Column(String(10))
    child_allowance = Column(String(100))
    total_reimbursement = Column(String(100))
    total_reim_net_days_paid = Column(String(100))
    sp_total_earnings = Column(String(100))
    dd_earn = Column(String(100))
    dd_hra = Column(String(100))
    dd_bonus = Column(String(100))
    dd_Medi = Column(String(100))
    dd_Hosp = Column(String(100))
    dd_Educa = Column(String(100))
    dd_canteen = Column(String(100))
    dd_wash = Column(String(100))
    dd_atten = Column(String(100))
    dd_risk = Column(String(10))
    dd_shift = Column(String(100))
    dd_covid = Column(String(100))
    dd_gross = Column(String(100))
    dd_variable = Column(String(100))
    dd_child_expenses = Column(String(100))
    dd_special_expenses = Column(String(100))
    dd_int_expenses = Column(String(100))
    dd_periodicals = Column(String(100))
    dd_car_reimbursement = Column(String(100))
    dd_driver = Column(String(100))
    dd_uniform = Column(String(100))
    dd_telephone = Column(String(100))
    dd_Professional_Development_Allowance = Column(String(100))
    dd_Gifts_From_Non_Relatives = Column(String(10))
    dd_Gifts_From_Relatives = Column(String(100))
    dd_child_allowance = Column(String(100))
    dd_total_reim = Column(String(100))
    dd_total_earnings = Column(String(100))
    dd_pf = Column(String(100))
    dd_esic = Column(String(100))
    dd_ptax = Column(String(100))
    dd_hostel = Column(String(100))
    dd_fnb = Column(String(100))
    dd_tds = Column(String(100))
    dd_medical = Column(String(100))
    dd_other = Column(String(100))
    dd_salaryadvance = Column(String(100))
    dd_mobile = Column(String(10),index=True)
    dd_nps_ded = Column(String(100))
    dd_bill = Column(String(100))
    dd_acls = Column(String(100))
    dd_lwf = Column(String(100))
    dd_total_due = Column(String(100))
    netpay = Column(String(100))
    total_taxable_income = Column(String(100))
    total_tax_pa = Column(String(100))
    tds_monthly = Column(String(100))
    my = Column(String(50),index=True)
    branch = Column(String(100),index=True)

class Leave_management(Base):
    __tablename__='leave_management'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    empid = Column(String(10),index=True)
    emp_name = Column(String(100))
    leave_type  = Column(String(50))
    applied_date = Column((Date),index=True)
    applied_time = Column(Time)
    from_date  = Column(Date, index=True)
    to_date = Column(Date)
    days = Column(String(100))
    reason = Column(String(100))
    status  = Column(String(50),index=True)
    attachment = Column(String(100))
    employee_status  = Column(String(50))
    approver  = Column(String(50))
    approved_date = Column(DateTime)
    source = Column(String(30))
    branch = Column(String(100))
    cancelled_by = Column(String(100))
    cancelled_on = Column(DateTime)

class HRpayrol(Base):
    __tablename__='hr_payroll'
    sno=Column(Integer,primary_key=True,autoincrement=True)
    month=Column(String(50),index=True)
    year=Column(String(50))
    start_date=Column(Date)
    end_date=Column(Date)
    accessdate=Column(Date)
    days=Column(Integer)

class Internationalptientatten(Base):
    __tablename__='international_patients_attenders'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    transid = Column(String(10), unique=True)
    title = Column(String(100))
    fullname = Column(String(300))
    passport = Column(String(30))
    nationality = Column(String(100))
    empid = Column(String(10))
    empname = Column(String(100))
    createdon = Column(DateTime)
    updateon = Column(DateTime)
    ipaddress = Column(DateTime)

class Embassy(Base):
    __tablename__='embassy_list'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    embassy_name=Column(String(150))
    type=Column(String(100))
    address=Column(String(100))
    telephone=Column(String(100))
    fax=Column(String(100))
    emailid=Column(String(100))
    web=Column(String(100))

class Task(Base):
    __tablename__='task_management'
    meeting_sno = Column(Integer, primary_key=True, autoincrement=True)
    meeting_id = Column(String(10), unique=True)
    meeting_name = Column(String(100))
    description = Column(String(100))
    deadline = Column(String(100))
    emp_id = Column(String(100))
    name = Column(String(100))
    department = Column(String(100))
    designation = Column(String(100))
    branch = Column(String(100))
    priority = Column(String(100))
    assign = Column(String(100))
    assign_remarks = Column(String(100))
    assign_status = Column(String(100))
    app_rej_on = Column(Date)
    status = Column(String(100))
    remarks = Column(String(100))
    document_file = Column(String(100))
    completed_time = Column(Time)
    created_by = Column(String(50))
    created_on = Column(Time)

class Grievance_map(Base):
    __tablename__='grievance_mapping'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    empid = Column(String(50), unique=True)
    empname = Column(String(50))
    department = Column(String(50))
    branch = Column(String(150))
    mailid = Column(String(100))
    contact = Column(Integer)
    extension_no = Column(Integer)
    type = Column(String(30))
    created_by = Column(Integer)
    created_time = Column(DateTime)
    updated_by = Column(String(50))
    updated_on = Column(DateTime)

class Compansetoryoff(Base):
    __tablename__='compensatory_off'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    empid = Column(String(10), unique=True)
    emp_name = Column(String(100))
    leave_type = Column(String(100))
    applied_date = Column(Date)
    applied_time = Column(Time)
    from_date = Column(Date)
    to_date = Column(Date)
    days = Column(Integer)
    reason = Column(String(50))
    status = Column(String(50))
    approver = Column(String(50))
    approved_date = Column(DateTime)
    branch = Column(String(50))
    source = Column(String(30))
    extra = Column(Time)
    type = Column(String(10))

class Holidaytype(Base):
    __tablename__='holidays_list_dup'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    state = Column(String(100))
    holiday_name = Column(String(100))
    date = Column(Date)
    leavetype = Column(String(100))
    status = Column(String(100))

class Attendance(Base):
    __tablename__='attendance'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    empid = Column(String(50), unique=True)
    empname = Column(String(50))
    ass_shift = Column(String(50))
    date  = Column(Date)
    intime = Column(Time)
    outdate = Column(Date)
    outtime = Column(Time)
    Attendance = Column(String(50))
    payroll_status  = Column(String(50))
    shift = Column(String(5))
    twt  = Column(Time)
    source = Column(String(500))
    last_datetime = Column(DateTime)

class Punchdatanew(Base):
    __tablename__='punch_data_new'
    id = Column(Integer, primary_key=True, autoincrement=True)
    emp_code = Column(String(6), unique=True)
    employee_name = Column(String(100))
    card_no = Column(String(6))
    punchdate  = Column(Date)
    key_type  = Column(String(6))
    punch_time = Column(Time)
    machine = Column(String(100))
    updatedon = Column(DateTime)
    status  = Column(String(20))


class Land(Base):
    __tablename__='landd'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    testname = Column(String(30))
    url = Column(String(300))
    duration = Column(Time)
    createdby = Column(String(50))
    createdon = Column(Date)
    status = Column(String(10))
    department=Column(String(30))

class Landans(Base):
    __tablename__='landd_answered'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    quiz_id = Column(Integer)
    question_id = Column(Integer)
    option_selected = Column(String(30))
    ans_status = Column(Integer)
    empid = Column(String(10))
    date_time = Column(DateTime)
    attempt = Column(Integer)

class Landqresult(Base):
    __tablename__='landd_result'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    quiz_id = Column(Integer)
    empid = Column(String(10))
    totalques = Column(Integer)
    totalans = Column(Integer)
    rightans = Column(Integer)
    wrongans = Column(Integer)
    date_time = Column(DateTime)
    attempt_count = Column(Integer)
    result = Column(String(20))
    score = Column(String(20))

class Finatimesheet(Base):
    __tablename__='finance_time_sheet'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    work_date  = Column(Date)
    day = Column(String(100))
    work_done = Column(String(100))
    time_spent = Column(String(20))
    type = Column(String(100))
    frequency = Column(String(100))
    activity = Column(String(100))
    department = Column(String(100))
    created_by = Column(String(200),index=True)
    report_to = Column(String(6),index=True)
    created_on= Column((DateTime),index=True)

class Leavecredit(Base):
    __tablename__='leavecredits'
    sno = Column(Integer, primary_key=True, autoincrement=True)
    empid  = Column(String(10))
    employee_name = Column(String(100))
    credit_date = Column(Date)
    credit_time = Column(Time)
    leave_type  = Column(String(50))
    opening_balance = Column(Integer)
    year_credit = Column(Integer)
    credit = Column(Integer)
    debit = Column(Integer)
    encashment = Column(Integer)
    credited_empid = Column(String(20))
    expity_date = Column(Date)
    used_status = Column(String(10))
    comp_id = Column(Integer)
    source = Column(String(100))






